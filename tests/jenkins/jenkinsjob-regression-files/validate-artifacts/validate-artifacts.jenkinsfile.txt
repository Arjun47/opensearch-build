   validate-docker.run()
      validate-docker.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      validate-docker.library({identifier=jenkins@4.1.1, retriever=null})
      validate-docker.pipeline(groovy.lang.Closure)
         validate-docker.timeout({time=4, unit=HOURS})
         validate-docker.echo(Executing on agent [label:none])
         validate-docker.stage(verify-parameters, groovy.lang.Closure)
            validate-docker.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            validate-docker.script(groovy.lang.Closure)
         validate-docker.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         validate-docker.stage(Run for all validations, groovy.lang.Closure)
            validate-docker.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            validate-docker.script(groovy.lang.Closure)
               validate-docker.echo(distributionList: [docker])
               validate-docker.echo(architectureList: [x64])
               validate-docker.stash({includes=**, name=validateDocker-123})
               validate-docker.parallel({Validation x64=groovy.lang.Closure})
                  validate-docker.echo(architectureList: [x64])
                  validate-docker.echo(architecture: x64)
                  validate-docker.echo(local_architecture: x64)
                  validate-docker.echo(Add Distribution: docker)
                  validate-docker.parallel({Validation docker=groovy.lang.Closure})
                     validate-docker.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                        validate-docker.node(Jenkins-Agent-AL2-X64-C54xlarge-Single-Host, groovy.lang.Closure)
                           validate-docker.unstash(validateDocker-123)
                           validate-docker.validateArtifacts({version=2.3.0, distribution=docker, arch=x64, os-build-number=6039, osd-build-number=4104, using-staging-artifact-only=})
                              validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                              validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution docker --arch x64 --os-build-number 6039 --osd-build-number 4104 --using-staging-artifact-only )
                           validate-docker.echo(Completed validation for docker)
                           validate-docker.postCleanup()
                              postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         validate-docker.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
