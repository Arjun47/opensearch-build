lib = library(identifier: 'jenkins@4.1.1', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/opensearch-project/opensearch-build-libraries.git',
]))

def docker_images = [
    "tar": "opensearchstaging/ci-runner:ci-runner-rockylinux8-opensearch-dashboards-integtest-v2",
    "rpm": "opensearchstaging/ci-runner:ci-runner-rockylinux8-systemd-base-integtest-v1",
    "yum": "opensearchstaging/ci-runner:ci-runner-rockylinux8-systemd-base-integtest-v1",
]

def docker_args = [
    "tar": "-u 1000",
    "rpm": "--entrypoint=/usr/sbin/init -u root --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro",
    "yum": "--entrypoint=/usr/sbin/init -u root --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro",
]

def agent_nodes_docker = [
    "x64": "Jenkins-Agent-AL2-X64-C54xlarge-Single-Host",
    "arm64": "Jenkins-Agent-AL2-Arm64-C6g4xlarge-Single-Host",
]

def agent_nodes = [
    "x64": "Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host",
    "arm64": "Jenkins-Agent-AL2-Arm64-C6g4xlarge-Docker-Host",
]

pipeline {
    options {
        timeout(time: 4, unit: 'HOURS')
    }
    agent none
    parameters {
        string(
            name: 'VERSION',
            description: 'VERSION NUMBER',
            trim: true
        )
        string(
            name: 'DISTRIBUTION',
            description: 'Enter the distribution type among [tar,rpm,yum,docker,All(To run all the distributions)] default is set to Tarball',
            trim: true,
            defaultValue: "tar rpm yum docker"

        )
        string(
            name: 'ARCHITECTURE',
            description: 'Enter the architecture type among [x64,arm64] default is set to x64',
            trim: true,
            defaultValue: "x64 arm64"
        )
        string(
            name: 'OS_BUILD_NUMBER',
            description: 'Enter the build number for opensearch-This parameter is applicable only for docker validation',
            trim: true,
        )
        string(
            name: 'OSD_BUILD_NUMBER',
            description: 'Enter the build number for opensearch Dashboards -This parameter is applicable only for docker validation',
            trim: true,
        )
        string(
            name: 'OPTIONAL_ARGS',
            description: 'optional choose among validate-digest-only or using-staging-artifact-only',
            trim: true,
            defaultValue: "using-staging-artifact-only"
        )

    }

    stages {
        stage('verify-parameters') {
            agent { label agent_nodes["x64"] }
            steps {
                script {
                    if (VERSION == '') {
                        currentBuild.result = 'ABORTED'
                        error('Provide version number for the artifacts')
                    }
                }
            }
            post {
                always {
                    postCleanup()
                }
            }
        }
        stage('Main parallel') {
            parallel {
                stage('Start containers') {
                agent { label agent_nodes["x64"] }
                    stages {
                        stage('Gradle build') {
                            parallel{
                                stage('gradle1') {
                                    steps {
                                        dir("") {
                                            script {
                                                       buildInfo = rtGradle.run switches: gradleParams , tasks: 'clean deploy'

                                                   }
                                            }
                                        }
                                    }
                                }
                                stage('gradle2') {
                                    steps {
                                        dir("") {
                                            script {
                                                buildInfo2 = rtGradle2.run switches: gradleParams , tasks: 'unitTests'
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
